pi
sqrt(8) # menampilkan akar dari 8
#contoh diatas identik dengan perintah berikut
print(pi)
print(sqrt(8))
print("belajar R")
"belajar"
# print tidak bisa digunakan untuk lebih dari satu objek, seperti berikut
print("objek satu","objek dua")
#alternatif menggunakan print lebih dari sato objek
cat("objek satu","objek dua")
cat("objek satu","\n","objek dua")
cat("objek satu","\n objek dua")
cat("objek satu \n objek dua")
cat("objek satu \nobjek dua")
cat("objek satu \nobjek dua \nsqrt(8)") #\n print pada baris sesudahnya
cat("objek satu \nobjek dua \nobjek tiga \n","sqrt(6)") #\n print pada baris sesudahnya
cat("objek satu \nobjek dua \nobjek tiga ","sqrt(6)") #\n print pada baris sesudahnya
cat("objek satu \nobjek dua \nobjek tiga\n","sqrt(6)") #\n print pada baris sesudahnya
cat("objek satu \nobjek dua \nobjek tiga \n","sqrt(6)") #\n print pada baris sesudahnya
cat("objek satu \nobjek dua\n objek tiga \n","sqrt(6)") #\n print pada baris sesudahnya
cat("objek satu\n objek dua\n objek tiga\n","sqrt(6)") #\n print pada baris sesudahnya
matrx(c(1,2,3,4),2,2)
matrix(c(1,2,3,4),2,2)
print(matrix(c(1,2,3,4),2,2))
list("a","b","c")
"belajar R"
print("belajar R")
print(list("a","b","c"))
#KETERBATASA CAT
# tidak dapat print suatu struktur data seperti list dan matrix
cat(matrix(c(1,2,3,4),2,2))
cat(list("a","b","c"))
vector(c(1,2,3,4))
c(1,2,3,4)
print(c(1,2,3,4))
cat(c(1,2,3,4))
# menggunakan operator "<-" atau "="
x <- 7
sqrt(x^2)
x <- c("merah","kuning","hijau")
print(x)
print(2*x)
print(x)
print(x)
x <<3
x <<- 3
x
x
z -> 4
4 -> z
# beberapa operator lain untuk mendefenisikan variabel
x = 2
y <<- 3
4 -> z
cat(x,y,z)
print(x,y,z)
print(x,y,z)
print(x,y,z)
print(x,y,z)
cat(x,y,z)
ls.str()
# LIST VARIABEL YANG SUDAH ADA
ls.str()
ls()
# LIST VARIABEL YANG SUDAH ADA
ls() # list nama variabel
ls.str() #list nama variabel dan nilainya
#perhatian:
#list tidak menampilkan variabel dengan nama yang diawali dengan titik (.)
.tersembunyi <- 2019
ls()
#untuk memakasanya tampil gunakan perintah
ls(all.names=TRUE)
.tersembunyi
.Random.seed
# MENGHAPUS VARIABEL
x
# MENGHAPUS VARIABEL
rm(x) #menghapus variabel x
x
rm(y,z)
y
z
c("a",1)
# sebuah vektor dapat mengandung antara number, string dan logical tapi tidak bisa dicampur
c(1,2,3,4)
c("a","b","c")
c(T,T,F,T)
#jika sebuah vektor mempunyai tipe yang sama, maka bisa digabung
v1 <- (1,2,3)
v2 <- (4,5,6)
#jika sebuah vektor mempunyai tipe yang sama, maka bisa digabung
v1 <- c(1,2,3)
v2 <- c(4,5,6)
c(v1.v3)
c(v1,v3)
#ketika vektor dengan tipe yang berbeda digabung
v3 <- c("1","b","c")
c(v1,v3)
c(v1,c2) #combine vektor
c(v1,v2) #combine vektor
mode(v1)
mode(v3)
mode(c(v1,v3)) # hasil
mode(c(v1,v3)) # hasilnya character
mean(x) #rata-rata
x <- c(0,1,2,3,4,5,6,7,8,9)
mean(x) #rata-rata
median(x) # nilai tengah data
sd(x) #standar deviasi
var(x) #variasi dari data
y <- c(2,3,4,5,4,3,6,7,8,1)
cor(x,y) #korelasi antara x dan y
cov(x,y) #kovariasi antara x dan y
#Ketika ada Missing value
#fungsi akan menghasilkan NA ketika ada nilai data yang NA
mean(c(1,2,3))
#Ketika ada Missing value
#fungsi akan menghasilkan NA ketika ada nilai data yang NA
mean(c(1,2,3,NA))
#untuk mengabaikan nilai NA
mean(c(1,2,3,NA),na.rm=TRUE)
ls(data)
data
str(data)
data.frame()
head(irirs)
head(iris)
View(data)
sample(3,5)
sample(1:5,3)
sample(1:5,6)
sample(range(4),6)
sample(range(4),2)
sample(range(4),6,replace = T)
sample(range(4),6,replace = T)
sample(range(4),6,replace = T)
sample(range(4),6,replace = T)
sample(range(4),6,replace = T)
#DATA Matrix atau Data Frame
A <- data.frame(kecil=sample(0:10,5),
sedang=sample(10:20,5),
besar=sample(20:40,5))
A
mean(A)
str(A)
print(A)
mean(A)
cov(A)
mean(A)
sd(A)
cov(A)
var(A)
cor(A)
edit(A)
cov(A)
var(A)
cor(A)
mean(as.matrix(A))
mean(matrix(c(1,2,3,4)2,2))
mean(matrix(c(1,2,3,4),2,2))
mean(A)
mean(A$kecil)
mean(A[,1:3]
)
print("hai")
1:7
seq(from=1,to=10,by=2)
seq(1,10,2)
rep(7,times=3)
7:1
seq(from=1,to=10,by=0.5)
# MEMBANDINGKAN VEKTOR ANTARA 2 NILAI
a <- 4
b <- 5
a > b
a < b
a == b #F
a != b #T
a >= b
a <= b
b <- c(1,3,4,2,5)
a == b
#membandingkan vekor
a <- c(1,2,3,2,4)
b <- c(1,3,4,2,5)
a == b
a != b
a > b
a < b
any(a==2)
sum(any(a==2))
sum(is(a==2))
sum(a==2)
sum(a==1)
any(a==b)
sum(a==b)
all(b==2)
all(b < 10)
kamu <- c(1,2,3,4,5,6,7,8,9)
kamu[1]
kamu[2]
kamu[1:4]
kamu[-9] # mengecualikan nilai ke 9
kamu <- c(0,1,2,3,4,5,6,7,8,9)
kamu[-9] # mengecualikan nilai ke 9
kamu[c(1,2,3,4)]
kamu[-1:4]
kamu[-c(1,2,3,4,5)]
kamu[-c(2,4,6)] # mengecualikan nilai ke 2, 4, 6
kamu[kamu <5]
kamu %% 2 ==0
kamu %% 3 ==0
kamu[kamu %% 2 ==0]
#cara penyeleksian lebih lanjut
v = kamu
v[v > median(v)]
quantile(v,0.05)
quantile(v,0.5)
quantile(v,0.05)
#pilih semua elemen
v[(v < quantile(v,0.05)) | (v > quantile(v,0.95)) ]
#pilih nilai yang melebihi 2sd dari rata-rata
#bisa untuk menentukan outlier
v[abs(v-mean(v)) > 2*sd(v)]
sd(v)
#pilih nilai yang melebihi 2sd dari rata-rata
#bisa untuk menentukan outlier
any(abs(v-mean(v)) > 2*sd(v))
#memilih elemen yang tidak mempunyai NA dan NULL
v[!is.na(v) & & !is.null(v)]
#memilih elemen yang tidak mempunyai NA dan NULL
v[!is.na(v) & !is.null(v)]
#memilih elemen yang tidak mempunyai NA dan NULL
v[!is.na(v) | !is.null(v)]
#membandingkan vekor
a <- c(1,2,3,2,4)
b <- c(1,3,4,2,5)
#OPERASI VEKTOR
a+b
a-b
a/b
a*b
a^2
A
A@
a
A@1
4 %in% 2*2
4 %in% 2*3
4 %in% 2
4 %in% 2*3
4 %in% 4
4 %in% c(1,2,3,4)
1 %in% c(1,2,3,4)
5 %in% c(1,2,3,4)
any(c(1,2,3,4)==2)
any(c(1,2,3,4)==6)
"h" %+% "n"
f <- function(x) sd(x)/mean(x)
ff <- function(x) sd(x)/mean(x)
ff(l)
ff(l)
a
ff <- function(x) sd(x)/mean(x)
l = c(6,3,4,5,7,9,3,4,5)
ff(l)
lapply(l,ff)
ff(l)
v = c(6,3,4,5,7,9,3,4,5)
f(l)
#mengaplikasikan fungsi untuk data list
ls = list(c(1,2,3),c(4,5,2),c(6,4,8))
ls
lapply(ls,ff)
#mengaplikasikan fungsi untuk data list
ls = list(c(1,2,3),c(4,5,2),c(6,4,8,4))
lapply(ls,ff)
else return(gcd(b,a%%b))
gcd <- function(a,b){
if (b==0) return(a)
else return(gcd(b,a%%b))
}
gcd(3,5)
gcd(2,5)
gcd(1,5)
gcd(6,5)
gcd(88,5)
gcd(88,1312)
gcd(88,13)
gcd(2,4)
gcd(2,6)
gcd(8,6)
gcd(8,0)
x <- pi
x
x
x
x
search()
library(stats)
search()
library(ggplot2)
ls
ls.str
ls.str()
ls
ls(data())
ls(data
)
data()
library()
q()
